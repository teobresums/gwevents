# parfile for BNS GW170817, m1= 1.46, m2 = 1.27, q = 1.15
# Post-adiabatic + ODE run
# builds on default options

use_geometric_units = 0 # use geometric units for I/O ?

#
# Binary properties in physical units
#

M = 2.73 # total binary mass in solar masses
q = 1.1496062992125984 # mass ratio

distance = 40.   # distance in megaparsecs
inclination = 0.698132 # 140*
#coalescence_angle = 0.

use_spins = 0 # use spins ?
chi1 = 0. # dimensionless spin 1 z-component 
chi2 = 0. # dimensionless spin 2 z-component 

initial_frequency = 20. # in units of Hz

tides = "TEOBRESUM3"
tides_gravitomagnetic = "PN"
LambdaAl2 = 100. # WFF1
LambdaBl2 = 300. # WFF1
use_Yagi_fits = 1

centrifugal_radius = "NNLO" 
use_flm = "SSNLO"

#
# Output dir, output modes 
#

output_dir = "./GW170817/" # output dir
output_hpc = 1 # switch this off to test performances!!!
output_multipoles = 0 # output multipoles
output_lm = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] # indexes of multipoles to output
output_dynamics = 0 # output dynamics

#
# Setup
#

size = 200 # size of the arrays (chunks, dynamically extended)
ode_timestep = "adaptive" 
ode_stop_at_radius = 4. # stop ODE integration at this radius (if > 0)
compute_LR = 0 # calculate LR ?
compute_LSO = 0 # calculate LSO ?

# interpolate on uniform grid?
#interp_uniform_grid = 0 # no, interpolates/outputs on a grid of dt_interp or srate_interp
interp_uniform_grid = 1 # yes, only h+,hx on a grid of dt_interp
#interp_uniform_grid = 2 # yes, all modes on a grid of dt_interp

srate_interp = 4096. # sampling rate to be used for final interpolation (used if input is given in physical unit, unused otherwise)
srate = 4096. # sampling rate, used if input is given in physical unit, reset based on tstep otherwise

#dt = 0.5 # timestep, used if input is given in geometric unit, reset based on srate otherwise
#dt_interp = 18.156322147088574 # interpolation spacing, M/delta_t  = 4096 Hz for M = 2.73 M_sun

#
# Setup for PA
#

postadiabatic_dynamics = "yes"
postadiabatic_dynamics_N = 8 # post-adiabatic order
postadiabatic_dynamics_size = 500 # grid size 
postadiabatic_dynamics_rmin = 12. # stop post-adiabatic dynamics at this radius
postadiabatic_dynamics_stop = "no" # stop after post-adiabatic dynamics







